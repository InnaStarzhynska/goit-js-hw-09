{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAatC,OAZgB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACLN,EAEFI,EAAQ,CAAEN,WAAUC,UAGpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IAMP,IAAMQ,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,WAAYF,SAASC,cAAc,uBACnCE,UAAWH,SAASC,cAAc,sBAClCG,YAAaJ,SAASC,cAAc,wBACpCI,OAAQL,SAASC,cAAc,0BAG/BH,EAAKC,KAAKO,iBAAiB,UAAU,SAACC,GACpCA,EAAIC,iBAIJ,IAHA,IAAIC,EAAQC,OAAOZ,EAAKI,WAAWS,OAC7BC,EAAOF,OAAOZ,EAAKK,UAAUQ,OAC7BE,EAASH,OAAOZ,EAAKM,YAAYO,OAC9BG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAChC1B,EAAc0B,EAAGL,GAAOM,MAAK,SAAAC,G,IAAE3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MACvC2B,EAAA/B,GAASgC,OAAOC,QAAQ,uBAAwCC,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,M,IACrE+B,OAAM,SAAAL,G,IAAE3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MACnB2B,EAAA/B,GAASgC,OAAOI,QAAQ,sBAAqCF,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,M,IAErEmB,GAASG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay })\n      }\n    }, delay)\n  });\n\n  return promise\n}\n\nconst refs = {\n  form: document.querySelector('.form'),\n  inputDelay: document.querySelector('input[name=\"delay\"]'),\n  inputStep: document.querySelector('input[name=\"step\"]'),\n  inputAmount: document.querySelector('input[name=\"amount\"]'),\n  button: document.querySelector('button[type=\"submit\"]')\n}\n\n  refs.form.addEventListener('submit', (evt) => {\n    evt.preventDefault();\n    let delay = Number(refs.inputDelay.value);\n    const step = Number(refs.inputStep.value);\n    const amount = Number(refs.inputAmount.value);\n    for (let i = 1; i <= amount; i += 1) {\n      createPromise(i, delay).then(({position, delay}) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n      }).catch(({position, delay})=> {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n      })\n      delay += step;\n    };\n  }\n  )"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$ce04d3a99e08e73b$var$refs","form","document","querySelector","inputDelay","inputStep","inputAmount","button","addEventListener","evt","preventDefault","delay1","Number","value","step","amount","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.317cee47.js.map"}